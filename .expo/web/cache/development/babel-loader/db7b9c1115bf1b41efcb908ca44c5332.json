{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/meludegiusti/Desktop/prog-native/src/components/Comments.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { auth, db } from \"../firebase/config\";\nimport firebase from \"firebase\";\n\nvar Comments = function (_Component) {\n  _inherits(Comments, _Component);\n\n  var _super = _createSuper(Comments);\n\n  function Comments(props) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      comment: ''\n    };\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"onComment\",\n    value: function onComment() {\n      var _this2 = this;\n\n      var post = db.collection(\"posteos\").doc(this.props.postData.id);\n\n      if (this.state.comment == '') {\n        alert('Por favor, escribí un comentario.');\n      } else {\n        post.update({\n          comments: firebase.firestore.FieldValue.arrayUnion({\n            id: Date.now(),\n            email: auth.currentUser.email,\n            comment: this.state.comment\n          })\n        }).then(function () {\n          _this2.setState({\n            comment: ''\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, this.props.comments.length != 0 ? React.createElement(FlatList, {\n        data: this.props.comments,\n        keyExtractor: function keyExtractor(comment) {\n          return comment.id;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(React.Fragment, null, React.createElement(Text, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }\n          }, item.email, \": \", item.comment));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }) : React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"A\\xFAn no hay comentarios. S\\xE9 el primero!\"), React.createElement(TextInput, {\n        keyboardType: \"default\",\n        placeholder: \"Coment\\xE1!\",\n        multiline: true,\n        numberOfLines: 1,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            comment: text\n          });\n        },\n        value: this.state.comment,\n        style: styles.placeholder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.post,\n        onPress: function onPress() {\n          return _this3.onComment();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"Post\")));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  post: {\n    backgroundColor: \"lightgreen\",\n    padding: 4,\n    margin: 2,\n    borderRadius: 4\n  },\n  placeholder: {\n    shadowColor: \"#ccc\",\n    margin: 5,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#ccc\"\n  }\n});\nexport default Comments;","map":{"version":3,"sources":["/Users/meludegiusti/Desktop/prog-native/src/components/Comments.js"],"names":["React","Component","auth","db","firebase","Comments","props","state","comment","post","collection","doc","postData","id","alert","update","comments","firestore","FieldValue","arrayUnion","Date","now","email","currentUser","then","setState","length","item","text","styles","placeholder","onComment","StyleSheet","create","container","flex","backgroundColor","padding","margin","borderRadius","shadowColor","borderWidth","borderStyle","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, FlatList, TextInput } from \"react-native\";\nimport { auth, db } from \"../firebase/config\";\nimport firebase from \"firebase\";\n\n\nclass Comments extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            comment: '',\n        };\n    }\n\n    onComment(){\n        const post = db.collection(\"posteos\").doc(this.props.postData.id);\n        if(this.state.comment == ''){\n            alert('Por favor, escribí un comentario.')\n        } else {\n            post.update({\n                comments: firebase.firestore.FieldValue.arrayUnion({\n                    id: Date.now(),\n                    email: auth.currentUser.email,\n                    // owner: auth.currentUser.displayName,\n                    comment: this.state.comment,\n                }),\n            })\n            .then(()=>{\n                this.setState({\n                    comment: '',\n                });\n            });\n        }\n    }\n\n    render(){\n        return(\n            <View>\n                {this.props.comments.length != 0 ? (\n                    <FlatList\n                    data={this.props.comments}\n                    keyExtractor={(comment)=> comment.id}\n                    renderItem={({ item })=>(\n                        <>\n                        <Text>\n                            {item.email}: {item.comment}\n                        </Text>\n                        </>\n                    )}\n                    />\n                ) : (\n                <Text >Aún no hay comentarios. Sé el primero!</Text>\n                )}\n\n                <TextInput\n                keyboardType=\"default\"\n                placeholder=\"Comentá!\"\n                multiline={true}\n                numberOfLines={1}\n                onChangeText={(text) => this.setState({ comment: text })}\n                value={this.state.comment}\n                style={styles.placeholder}\n                />\n                <TouchableOpacity style={styles.post} onPress={() => this.onComment()}>\n                    <Text style={styles.post}>Post</Text>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n}\n\nconst styles= StyleSheet.create({\n    container:{\n        flex: 1,\n    },\n\n    post:{\n        backgroundColor: \"lightgreen\",\n        padding: 4,\n        margin: 2,\n        borderRadius: 4,\n    },\n\n    placeholder:{\n        shadowColor: \"#ccc\",\n        margin: 5,\n        borderRadius: 4,\n        borderWidth: 1,\n        borderStyle: \"solid\",\n        borderColor: \"#ccc\",\n        \n    },\n    \n});\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}