{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Register from \"../screens/Register\";\nimport { auth } from \"../firebase/config\";\nvar Drawer = createDrawerNavigator();\n\nvar Menu = function (_Component) {\n  _inherits(Menu, _Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.call(this);\n    _this.state = {\n      loggedIn: false,\n      userData: ''\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      auth.onAuthStateChanged(function (user) {\n        console.log(user);\n\n        if (user !== null) {\n          _this2.setState({\n            loggedIn: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register(email, password) {\n      auth.createUserWithEmailAndPassword(email, password).then(function (userData) {\n        return console.log(userData);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login(email, password) {\n      var _this3 = this;\n\n      auth.signInWithEmailAndPassword(email, password).then(function (response) {\n        console.log(\"se logueó correctamente\");\n        console.log(response);\n\n        _this3.setState({\n          loggedIn: true,\n          userData: response.user\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Drawer.Navigator, null, React.createElement(Drawer.Screen, {\n        name: \"Home\",\n        component: function component() {\n          return React.createElement(Home, null);\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Login\",\n        component: function component() {\n          return React.createElement(Login, {\n            login: function login(email, pass) {\n              return _this4.login(email, pass);\n            }\n          });\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Register\",\n        component: function component() {\n          return React.createElement(Register, {\n            register: function register(email, pass) {\n              return _this4.register(email, pass);\n            }\n          });\n        }\n      }));\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nexport default Menu;","map":{"version":3,"sources":["/Users/meludegiusti/Desktop/prog-native/src/components/Menu.js"],"names":["React","Component","NavigationContainer","createDrawerNavigator","Home","Login","Register","auth","Drawer","Menu","state","loggedIn","userData","onAuthStateChanged","user","console","log","setState","email","password","createUserWithEmailAndPassword","then","catch","err","signInWithEmailAndPassword","response","pass","login","register"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,SAAQC,IAAR;AAEA,IAAMC,MAAM,GAAGL,qBAAqB,EAApC;;IAEMM,I;;;;;AACF,kBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAY;AACRC,MAAAA,QAAQ,EAAE,KADF;AAERC,MAAAA,QAAQ,EAAC;AAFD,KAAZ;AAFS;AAMZ;;;;WAED,6BAAoB;AAAA;;AAChBL,MAAAA,IAAI,CAACM,kBAAL,CAAwB,UAACC,IAAD,EAAU;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,UAAA,MAAI,CAACG,QAAL,CAAc;AACVN,YAAAA,QAAQ,EAAE;AADA,WAAd;AAGH,SAJD,MAIO;AACH,UAAA,MAAI,CAACM,QAAL,CAAc;AACVN,YAAAA,QAAQ,EAAE;AADA,WAAd;AAGH;AACJ,OAXD;AAYH;;;WAED,kBAASO,KAAT,EAAgBC,QAAhB,EAAyB;AACrBZ,MAAAA,IAAI,CAACa,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,EACKE,IADL,CACU,UAACT,QAAD;AAAA,eAAaG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAb;AAAA,OADV,EAEKU,KAFL,CAEW,UAACC,GAAD;AAAA,eAAQR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAAR;AAAA,OAFX;AAGH;;;WAED,eAAML,KAAN,EAAaC,QAAb,EAAsB;AAAA;;AACjBZ,MAAAA,IAAI,CAACiB,0BAAL,CAAgCN,KAAhC,EAAuCC,QAAvC,EACKE,IADL,CACU,UAACI,QAAD,EAAa;AAChBV,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;AACA,QAAA,MAAI,CAACR,QAAL,CAAc;AACVN,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,QAAQ,EAAEa,QAAQ,CAACX;AAFT,SAAd;AAKH,OATJ,EAUKQ,KAVL,CAUW,UAACC,GAAD;AAAA,eAAQR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAAR;AAAA,OAVX;AAWJ;;;WAED,kBAAQ;AAAA;;AACJ,aAGQ,oBAAC,MAAD,CAAQ,SAAR,QACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAE;AAAA,iBAAK,oBAAC,IAAD,OAAL;AAAA;AAAtC,QADJ,EAEI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,OAApB;AAA4B,QAAA,SAAS,EAAE;AAAA,iBAAK,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE,eAACL,KAAD,EAAQQ,IAAR;AAAA,qBAAe,MAAI,CAACC,KAAL,CAAWT,KAAX,EAAkBQ,IAAlB,CAAf;AAAA;AAAd,YAAL;AAAA;AAAvC,QAFJ,EAGI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,UAApB;AAA+B,QAAA,SAAS,EAAE;AAAA,iBAAK,oBAAC,QAAD;AAAU,YAAA,QAAQ,EAAE,kBAACR,KAAD,EAAQQ,IAAR;AAAA,qBAAgB,MAAI,CAACE,QAAL,CAAcV,KAAd,EAAqBQ,IAArB,CAAhB;AAAA;AAApB,YAAL;AAAA;AAA1C,QAHJ,CAHR;AAWH;;;;EAxDczB,S;;AA2DnB,eAAeQ,IAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport Home from '../screens/Home';\nimport Login from '../screens/Login';\nimport Register from '../screens/Register';\nimport {auth} from '../firebase/config'\n\nconst Drawer = createDrawerNavigator()\n\nclass Menu extends Component {\n    constructor(){\n        super();\n        this.state ={\n            loggedIn: false,\n            userData:'',\n        }\n    }\n\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => {\n            console.log(user);\n            if (user !== null) {\n                this.setState({\n                    loggedIn: true,\n                })\n            } else {\n                this.setState({\n                    loggedIn: false,\n                })\n            }\n        })\n    }\n\n    register(email, password){\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((userData)=> console.log(userData))\n            .catch((err)=> console.log(err))\n    }\n\n    login(email, password){\n         auth.signInWithEmailAndPassword(email, password)\n             .then((response)=> {\n                console.log(\"se logueó correctamente\");\n                console.log(response);\n                this.setState({\n                    loggedIn: true,\n                    userData: response.user\n                })\n             \n            })\n             .catch((err)=> console.log(err))\n    }\n\n    render(){\n        return(\n            \n            \n                <Drawer.Navigator>\n                    <Drawer.Screen name=\"Home\" component={()=> <Home />} />\n                    <Drawer.Screen name=\"Login\" component={()=> <Login login={(email, pass)=>this.login(email, pass)}/> }/>\n                    <Drawer.Screen name=\"Register\" component={()=> <Register register={(email, pass)=> this.register(email, pass) }/> }/>\n                </Drawer.Navigator>\n            \n            \n        )\n    }\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}