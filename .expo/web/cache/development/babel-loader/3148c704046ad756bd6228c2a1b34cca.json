{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth } from \"../firebase/config\";\n\nvar Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.setState = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"register\",\n    value: function register(email, password) {\n      auth.createUserWithEmailAndPassword(email, password).then(function () {\n        return console.log(\"se registró correctamente\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, null, React.createElement(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        placeholder: \"email\",\n        keyboardType: \"email-address\"\n      }), React.createElement(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"password\",\n        keyboardType: \"email-address\",\n        secureTextEntry: true\n      }), React.createElement(TouchableOpacity, {\n        style: StyleSheet.button,\n        onPress: function onPress() {\n          return _this2.register(_this2.state.email, _this2.state.password);\n        }\n      }, React.createElement(Text, null, \" Registrar \")));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/meludegiusti/Desktop/prog-native/src/screens/Register.js"],"names":["React","Component","auth","Register","props","setState","email","password","createUserWithEmailAndPassword","then","console","log","catch","err","text","StyleSheet","button","register","state"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAEA,SAAQC,IAAR;;IAGMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,QAAL,GAAe;AACXC,MAAAA,KAAK,EAAC,EADK;AAEXC,MAAAA,QAAQ,EAAC;AAFE,KAAf;AAFc;AAMjB;;;;WAED,kBAASD,KAAT,EAAgBC,QAAhB,EAAyB;AACrBL,MAAAA,IAAI,CAACM,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,EACKE,IADL,CACU;AAAA,eAAKC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAL;AAAA,OADV,EAEKC,KAFL,CAEW,UAACC,GAAD;AAAA,eAAQH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAR;AAAA,OAFX;AAGH;;;WAED,kBAAQ;AAAA;;AACJ,aACI,oBAAC,IAAD,QACI,oBAAC,SAAD;AACI,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAS,MAAI,CAACT,QAAL,CAAc;AAACC,YAAAA,KAAK,EAAEQ;AAAR,WAAd,CAAT;AAAA,SADlB;AAEI,QAAA,WAAW,EAAC,OAFhB;AAGI,QAAA,YAAY,EAAC;AAHjB,QADJ,EAMI,oBAAC,SAAD;AACI,QAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,iBAAS,MAAI,CAACT,QAAL,CAAc;AAACE,YAAAA,QAAQ,EAAEO;AAAX,WAAd,CAAT;AAAA,SADlB;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,YAAY,EAAC,eAHjB;AAII,QAAA,eAAe,EAAE;AAJrB,QANJ,EAYI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAEC,UAAU,CAACC,MADtB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAI,CAACC,QAAL,CAAc,MAAI,CAACC,KAAL,CAAWZ,KAAzB,EAAgC,MAAI,CAACY,KAAL,CAAWX,QAA3C,CAAL;AAAA;AAFb,SAII,oBAAC,IAAD,sBAJJ,CAZJ,CADJ;AAqBH;;;;EArCkBN,S;;AAwCvB,eAAeE,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport{Text, View, TextInput, TouchableOpacity} from 'react-native'\nimport {auth} from '../firebase/config'\n\n\nclass Register extends Component{\n    constructor(props){\n        super(props);\n        this.setState ={\n            email:'',\n            password:'',\n        }\n    }\n\n    register(email, password){\n        auth.createUserWithEmailAndPassword(email, password)\n            .then(()=> console.log(\"se registró correctamente\"))\n            .catch((err)=> console.log(err))\n    }\n\n    render(){\n        return(\n            <View>\n                <TextInput \n                    onChangeText={(text)=> this.setState({email: text})}\n                    placeholder=\"email\"\n                    keyboardType=\"email-address\"\n                />\n                <TextInput \n                    onChangeText={(text)=> this.setState({password: text})}\n                    placeholder=\"password\"\n                    keyboardType=\"email-address\"\n                    secureTextEntry={true}\n                />\n                <TouchableOpacity \n                    style={StyleSheet.button}\n                    onPress={()=> this.register(this.state.email, this.state.password)}\n                >\n                    <Text> Registrar </Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}