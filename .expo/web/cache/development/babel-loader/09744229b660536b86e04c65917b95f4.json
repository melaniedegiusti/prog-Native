{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Register from \"../screens/Register\";\nimport Profile from \"../screens/Profile\";\nimport NewPostForm from \"../screens/NewPostForm\";\nimport { auth } from \"../firebase/config\";\nvar Drawer = createDrawerNavigator();\n\nvar Menu = function (_Component) {\n  _inherits(Menu, _Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.call(this);\n    _this.state = {\n      loggedIn: false,\n      errorMessage: '',\n      errorCode: ''\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      auth.onAuthStateChanged(function (user) {\n        console.log(user);\n\n        if (user !== null) {\n          _this2.setState({\n            loggedIn: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register(email, password) {\n      auth.createUserWithEmailAndPassword(email, password).then(function (userData) {\n        return console.log(userData);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login(email, password) {\n      var _this3 = this;\n\n      auth.signInWithEmailAndPassword(email, password).then(function () {\n        console.log('========= Registrado ============');\n      }).catch(function (error) {\n        console.log(error);\n\n        _this3.setState({\n          errorMessage: error.message,\n          errorCode: error.code\n        });\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      auth.signOut();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return this.state.loggedIn == false ? React.createElement(Drawer.Navigator, null, React.createElement(Drawer.Screen, {\n        name: \"Login\",\n        component: function component() {\n          return React.createElement(Login, {\n            login: function login(email, pass) {\n              return _this4.login(email, pass);\n            },\n            errorMessage: _this4.state.errorMessage,\n            errorCode: _this4.state.errorCode\n          });\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Register\",\n        component: function component() {\n          return React.createElement(Register, {\n            register: function register(email, pass) {\n              return _this4.register(email, pass);\n            },\n            errorMessage: _this4.state.errorMessage,\n            errorCode: _this4.state.errorCode\n          });\n        }\n      })) : React.createElement(Drawer.Navigator, null, React.createElement(Drawer.Screen, {\n        name: \"Home\",\n        component: function component() {\n          return React.createElement(Home, null);\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Nuevo Post\",\n        component: function component() {\n          return React.createElement(NewPostForm, null);\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Mi Perfil\",\n        component: function component() {\n          return React.createElement(Profile, {\n            logout: function logout() {\n              return _this4.logout();\n            }\n          });\n        }\n      }));\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nexport default Menu;","map":{"version":3,"sources":["/Users/meludegiusti/Desktop/prog-native/src/components/Menu.js"],"names":["React","Component","NavigationContainer","createDrawerNavigator","Home","Login","Register","Profile","NewPostForm","auth","Drawer","Menu","state","loggedIn","errorMessage","errorCode","onAuthStateChanged","user","console","log","setState","email","password","createUserWithEmailAndPassword","then","userData","catch","err","signInWithEmailAndPassword","error","message","code","signOut","pass","login","register","logout"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport Home from '../screens/Home';\nimport Login from '../screens/Login';\nimport Register from '../screens/Register';\nimport Profile from '../screens/Profile';\nimport NewPostForm from '../screens/NewPostForm';\nimport {auth} from '../firebase/config'\n\nconst Drawer = createDrawerNavigator()\n\nclass Menu extends Component {\n    constructor(){\n        super();\n        this.state ={\n            loggedIn: false,\n            errorMessage:'',\n            errorCode:'',\n        }\n    }\n\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => {\n            console.log(user);\n            if (user !== null) {\n                this.setState({\n                    loggedIn: true,\n                })\n            } else {\n                this.setState({\n                    loggedIn: false,\n                })\n            }\n        })\n    }\n\n    register(email, password){\n        auth.createUserWithEmailAndPassword(email, password)\n            .then((userData)=> console.log(userData))\n            .catch((err)=> console.log(err))\n    }\n\n    login(email, password){\n         auth.signInWithEmailAndPassword(email, password)\n         .then( () => {\n            console.log('========= Registrado ============');\n        })\n        .catch( error => {\n            console.log(error);\n            this.setState({\n                errorMessage: error.message,\n                errorCode: error.code\n            })\n        })\n}\n\n      logout(){\n          auth.signOut()\n    }\n\n    render(){\n        return(\n                this.state.loggedIn == false ? \n                    <Drawer.Navigator>\n                        <Drawer.Screen name=\"Login\" component={()=><Login login={(email, pass)=>this.login(email, pass)} errorMessage={this.state.errorMessage} errorCode={this.state.errorCode} />} />\n                        <Drawer.Screen name=\"Register\" component={()=><Register register={(email, pass)=>this.register(email, pass)} errorMessage={this.state.errorMessage} errorCode={this.state.errorCode} />} />\n                    </Drawer.Navigator>\n                 :\n                    <Drawer.Navigator>\n                        <Drawer.Screen name=\"Home\" component={()=><Home />} />  \n                        <Drawer.Screen name=\"Nuevo Post\" component={() => <NewPostForm />}  />                    \n                        <Drawer.Screen name=\"Mi Perfil\" component={()=><Profile logout={() => this.logout()} />} />\n                    </Drawer.Navigator>\n        )\n    }\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}