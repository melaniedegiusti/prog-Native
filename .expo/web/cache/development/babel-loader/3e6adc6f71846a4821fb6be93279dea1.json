{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/meludegiusti/Desktop/prog-native/src/screens/NewPostForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth, db } from \"../firebase/config\";\nimport MyCamera from \"../components/MyCamera\";\n\nvar NewPostForm = function (_Component) {\n  _inherits(NewPostForm, _Component);\n\n  var _super = _createSuper(NewPostForm);\n\n  function NewPostForm() {\n    var _this;\n\n    _classCallCheck(this, NewPostForm);\n\n    _this = _super.call(this);\n    _this.state = {\n      title: '',\n      description: '',\n      showCamera: true,\n      url: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(NewPostForm, [{\n    key: \"submitPost\",\n    value: function submitPost() {\n      var _this2 = this;\n\n      db.collection('posteos').add({\n        user: auth.currentUser.displayName,\n        email: auth.currentUser.email,\n        createdAt: Date.now(),\n        title: this.state.title,\n        description: this.state.description,\n        likes: [],\n        comments: [],\n        photo: this.state.url\n      }).then(function () {\n        console.log('Posteo realizado!');\n\n        _this2.setState({\n          title: '',\n          description: ''\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"onImageUpload\",\n    value: function onImageUpload(url) {\n      this.setState({\n        url: url,\n        showCamera: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return this.state.showCamera ? React.createElement(MyCamera, {\n        onImageUpload: function onImageUpload(url) {\n          return _this3.onImageUpload(url);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }) : React.createElement(View, {\n        style: styles.formContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"T\\xEDtulo\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            title: text\n          });\n        },\n        value: this.state.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Descripci\\xF3n\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            description: text\n          });\n        },\n        value: this.state.description,\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this3.submitPost();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \" Postear \")));\n    }\n  }]);\n\n  return NewPostForm;\n}(Component);\n\nvar styles = StyleSheet.create({\n  formContainer: {\n    paddingHorizontal: 10,\n    marginTop: 20\n  },\n  input: {\n    height: 100,\n    paddingVertical: 15,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderStyle: 'solid',\n    borderRadius: 6,\n    marginVertical: 10\n  },\n  error: {\n    marginBottom: 10,\n    color: \"#dc3545\",\n    fontSize: 12\n  },\n  button: {\n    backgroundColor: '#28a745',\n    paddingHorizontal: 10,\n    paddingVertical: 6,\n    textAlign: 'center',\n    borderRadius: 4,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#28a745'\n  },\n  textButton: {\n    color: '#fff'\n  }\n});\nexport default NewPostForm;","map":{"version":3,"sources":["/Users/meludegiusti/Desktop/prog-native/src/screens/NewPostForm.js"],"names":["React","Component","auth","db","MyCamera","NewPostForm","state","title","description","showCamera","url","collection","add","user","currentUser","displayName","email","createdAt","Date","now","likes","comments","photo","then","console","log","setState","catch","err","onImageUpload","styles","formContainer","input","text","button","submitPost","textButton","StyleSheet","create","paddingHorizontal","marginTop","height","paddingVertical","borderWidth","borderColor","borderStyle","borderRadius","marginVertical","error","marginBottom","color","fontSize","backgroundColor","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, StyleSheet, View, TextInput, TouchableOpacity} from 'react-native'\nimport { auth, db } from '../firebase/config';\nimport MyCamera from '../components/MyCamera'\n\nclass NewPostForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n            showCamera: true,\n            url: \"\",\n        }\n    }\n\n    submitPost() {\n        db.collection('posteos').add({\n            user: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            createdAt: Date.now(),\n            title: this.state.title,\n            description: this.state.description,\n            likes: [],\n            comments: [],\n            photo: this.state.url,\n        })\n            .then(() => {\n                console.log('Posteo realizado!');\n                this.setState({\n                    title: '',\n                    description: ''\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    onImageUpload(url){\n        this.setState({\n            url: url,\n            showCamera: false,\n        })\n    }\n\n    render() {\n        return this.state.showCamera ? \n            ( <MyCamera onImageUpload={(url)=> this.onImageUpload(url)}/> )\n            : (\n                <View style={styles.formContainer}>\n                    <TextInput \n                        style={styles.input}\n                        placeholder=\"Título\"\n                        keyboardType=\"default\"\n                        onChangeText={ text => this.setState({ title: text }) }\n                        value={this.state.title}\n                    />\n                    <TextInput \n                        style={styles.input}\n                        placeholder=\"Descripción\"\n                        keyboardType=\"default\"\n                        onChangeText={ text => this.setState({ description: text }) }\n                        value={this.state.description}\n                        multiline={true}\n                    />\n                    <TouchableOpacity style={styles.button} onPress={() => this.submitPost()}>\n                        <Text style={styles.textButton}> Postear </Text>\n                    </TouchableOpacity>\n                </View> \n            );\n    }\n}\n\nconst styles = StyleSheet.create({\n    formContainer:{\n        paddingHorizontal:10,\n        marginTop: 20,\n    },\n    input:{\n        height:100,\n        paddingVertical:15,\n        paddingHorizontal: 10,\n        borderWidth:1,\n        borderColor: '#ccc',\n        borderStyle: 'solid',\n        borderRadius: 6,\n        marginVertical:10,\n    },\n    error:{\n        marginBottom: 10,\n        color: \"#dc3545\",\n        fontSize: 12\n    },\n    button:{\n        backgroundColor:'#28a745',\n        paddingHorizontal: 10,\n        paddingVertical: 6,\n        textAlign: 'center',\n        borderRadius:4, \n        borderWidth:1,\n        borderStyle: 'solid',\n        borderColor: '#28a745'\n    },\n    textButton:{\n        color: '#fff'\n    }\n\n})\n\nexport default NewPostForm;\n"]},"metadata":{},"sourceType":"module"}